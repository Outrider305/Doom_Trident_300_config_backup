############################################################################################################################################################################################################################
#                    MACROS
############################################################################################################################################################################################################################


####################################################################################################################
#                  START
####################################################################################################################


[gcode_macro PRINT_START]
gcode:		
	# Parameters
	{% set bed = params.BED|int %}
	{% set hotend = params.HOTEND|int %}
	{% set chamber = params.CHAMBER|default(0)|int %}
    {% set material = params.MATERIAL|default('')|string %}
    {% set nozzle = params.NOZZLE|default('0')|string %}

	# Set the parameters as persistent variables so they can be referenced outside of the macro (in PRINT_END)
	SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=bedtemp VALUE={bed}	
	SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=hotendtemp VALUE={hotend}	
	SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=chambertemp VALUE={chamber}	
	
   #UPDATE_DELAYED_GCODE ID=EXHAUST_OFF DURATION=0  													    ; cancel exhaust off timer (if there is one)
	UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=0      												; cancel off timer (if there is one)
    UPDATE_DELAYED_GCODE ID=NEVERMORE_OFF DURATION=0      												; cancel Nevermore off timer (if there is one)
	SET_PIN PIN=caselight VALUE=1																		; turn on case light
	RESETSPEEDS																							; reset speed, accel etc to configured values
	RESETRGB																							; reset LCD RGB
    SET_NOZZLE_LEDS_ON
    AUTO_PA MATERIAL={material} NOZZLE={nozzle}                                                          ; automatic PA based on nozzle diameter and material type
	M104 S160																							; set hotend to no-ooze temp
	M140 S{bed}																							; set bed to target temp
    STATUS_HOMING
	HOME																									
	ABSOLUTE_COORDINATES																				
    VERIFY_HEATSOAK
    NEVERMORE_ADJUST                                                                                    ; temp based bed fans setting
    PRINT_MESH                                                                                          ; combined homing, z_tilt, bed_mesh_calibrate from euclid config
    M109 S{hotend}                                                                                      ; wait for hotend temp
    STATUS_CLEANING
    CLEANNOZZLE                                                                                        
    STATUS_CALIBRATING_Z
    CALIBRATE_Z                                                                                         ; final z homing with hot nozzle
    STATUS_BUSY
    PARKPURGE                                                                                           ; park toolhead over purge bucket
    FILAMENT_PURGE                                                                                      ; prime nozzle to reset filament from FORM_TIP macro in PRINT_END
    STATUS_READY
    SWIPENOZZLE                                                                                         ; final nozzle brush before printing
    STATUS_BUSY


######################################################################################
#                  CHAMBER TEMP 
######################################################################################


[gcode_macro HEATSOAK]
gcode:
	# Parameters
	{% set t = params.T|default(110)|int %}
	{% set move = params.MOVE|default(1)|int %}

    SET_NOZZLE_LEDS_ON							                                                        ; Turn on Nozzle LEDs
    SET_PIN PIN=caselight VALUE=1						                                                ; turn on case light
	UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=0                                                      ; cancel off timer (if there is one)
	UPDATE_DELAYED_GCODE ID=NEVERMORE_OFF DURATION=0      												; cancel Nevermore off timer (if there is one)
    SET_FAN_SPEED FAN=nevermore SPEED=1      	 		                                                ; turn on Nevermore
    SET_NOZZLE_LEDS_ON
    RESETRGB
	M140 S{t}							                                                                ; heat bed
    STATUS_HEATING
	{% if t >= 100 %}
		M104 S160									                                                    ; set hotend to no-ooze temp
		M106 S205 									                                                    ; turn on part fan (80%)
	{% else %}
		M106 S0 								                                                        ; turn part fan off
	{% endif %}
	{% if move == 1 %}
		CG28										                                                    ; conditional home
		PARKCENTER						 			                                                    ; move to bed
	{% endif %}

[gcode_macro VERIFY_HEATSOAK]
gcode:
    {% if printer["temperature_sensor chamber"].temperature < chamber %}								; - if chamber is not at temp yet:
		HEATSOAK T={bed} MOVE=1																			; 	heatsoak macro + park in center
		M190 S{bed} 																					; 	wait for bed final temp
		TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chamber}							; 	wait for chamber final temp
	{% else %}																							; - if chamber is already at temp:
		{% if printer.heater_bed.temperature < (bed-2) %}												; -- but bed is not fully heated (within 2C):
			HEATSOAK T={bed} MOVE=1																		; 		heatsoak and park
			M190 S{bed} 																				; 		wait for bed final temp
		{% else %}																						; -- and bed is already heated:
			HEATSOAK T={bed} MOVE=0																		; 		"heatsoak" without parking (only still calling this because it does some other things like turn off exahaust fan)
		{% endif %}
	{% endif %}	
	M106 S0		


####################################################################################################################
#                  END/CANCEL
####################################################################################################################


[gcode_macro PRINT_END]
gcode:
	RESETRGB																							; revert LCD RGB
	#SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0												; disable filament sensor
	CLEAR_PAUSE																							; clear pause (from M191) if there is one
	{% if printer.heater_bed.temperature >= 100 %}												
		SET_FAN_SPEED FAN=nevermore SPEED=1  															; crank exhaust fan to 100% to evacuate chamber
        SET_FAN_SPEED FAN=BedFans SPEED=0				                                                ; bed fan off
	{% endif %}													
	CLEAR_BUFFER                         	   															
    M107                         	   			 	 													; turn off part cooling fan
    ABSOLUTE_COORDINATES                           	    			 												
	G1 X{printer.toolhead.axis_maximum.x-10} Y{printer.toolhead.axis_maximum.y-10} F18000.0  			; park nozzle at rear
	RESET_EXTRUDER                 	    																; zero the extruder
    FORM_TIP                                                                                            ; retract filament
	M104 S0						 	    			 													; turn only the hotend off
	#M140 S{printer["gcode_macro PRINT_START"].bedtemp|int}												; return the bed to temp, some slicers like to turn it off
    M140 S0                                                                                             ; turn only the bed off 
	RELATIVE_COORDINATES                             							 						; relative positioning
    G1 Z5 F900                  	    			 													; move nozzle up 5mm
    ABSOLUTE_COORDINATES                           	    			 												
	BED_MESH_CLEAR																						; clear bed mesh									
	UPDATE_DELAYED_GCODE ID=NEVERMORE_OFF DURATION=1200													; turn exhaust off in 3 min
	UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=2700	 												; turn everything off in 30 min
	RESETSPEEDS																							; reset speed, accel etc to configured max values
    STATUS_OFF


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  SDCARD_RESET_FILE
  PRINT_END
  CANCEL_PRINT_BASE


####################################################################################################################
#                  PAUSE / FILAMENT CHANGE / RESUME
####################################################################################################################


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
	# Parameters
	{% set z = params.Z|default(10)|int %}																					; z hop amount
	
	{% if printer['pause_resume'].is_paused|int == 0 %}		
		SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}									    						; set z hop variable for reference in resume macro
		SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}									; set hotend temp variable for reference in resume macro
								
		#SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0																	; disable filament sensor		
		SAVE_GCODE_STATE NAME=PAUSE																							; save current print position for resume				
		BASE_PAUSE																											; pause print
		{% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}										; check that zhop doesn't exceed z max
			RELATIVE_COORDINATES																							; relative positioning
			G1 Z{z} F900																									; raise Z up by z hop amount
		{% else %}
			{ action_respond_info("Pause zhop exceeds maximum Z height.") }													; if z max is exceeded, show message and set zhop value for resume to 0
			SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
		{% endif %}
		ABSOLUTE_COORDINATES																								; absolute positioning
		G1 X275 Y312 F18000									                                                                ; park toolhead at front center
        FORM_TIP
        SAVE_GCODE_STATE NAME=PAUSEPARK																						; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)	
		#M104 S0																												; turn off hotend
		SET_IDLE_TIMEOUT TIMEOUT=43200															    						; set timeout to 12 hours
	{% endif %}


# Return Z hop back down 10mm, prime nozzle, resume print.
[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
	# Parameters
	{% set e = params.E|default(2.5)|int %}
	
	{% if printer['pause_resume'].is_paused|int == 1 %}
		#SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1																; enable filament sensor
		RESETRGB																											; reset LCD color
		SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}											; set timeout back to configured value
		{% if etemp > 0 %}
			M109 S{etemp|int}																								; wait for hotend to heat back up
		{% endif %}
        FILAMENT_PURGE                                                                                                      ; park toolhead at purge bucket and purge filament
        SWIPENOZZLE
		RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=450															; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)						
		RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=450																; restore position
		BASE_RESUME																											; resume print
	{% endif %}


# Filament runout / change alias	
[gcode_macro M600]
gcode:
	LCDRGB R=0 G=0 B=1	# Turn LCD green
	PAUSE


####################################################################################################################
#                  FILAMENT
####################################################################################################################


[gcode_macro HOT_LOAD]
gcode:
	# Parameters
	{% set t = params.T|default(240)|int %}
	
	M104 S{t}
	PARKPURGE
	M109 S{t}
    LOAD_FILAMENT


[gcode_macro LOAD_FILAMENT]
gcode:
	SAVE_GCODE_STATE NAME=LOADFILAMENT
	RELATIVE_EXTRUSION                                                                        
	G1 E200 F300
	RESTORE_GCODE_STATE NAME=LOADFILAMENT


[gcode_macro HOT_UNLOAD]
gcode:
	# Parameters
	{% set t = params.T|default(240)|int %}
	
	M104 S{t}
	PARKPURGE
	M109 S{t}
    UNLOAD_FILAMENT


[gcode_macro UNLOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=UNLOADFILAMENT
	RELATIVE_EXTRUSION                                                                     
	G1 E10 F300                                                                 ; extrude a little to soften tip 
	FORM_TIP                                                                    ; retract filament completely
	RESTORE_GCODE_STATE NAME=UNLOADFILAMENT


[gcode_macro FILAMENT_PURGE]
gcode:
#   G0 X192 Y75 F18000
  {% if printer.extruder.can_extrude|lower == 'true' %}
    RELATIVE_EXTRUSION
    RESET_EXTRUDER
    G1 E70 F300
    RESET_EXTRUDER
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}


# StandAlone cooling moves to extract proper filament tip
[gcode_macro FORM_TIP]
gcode:
    G91
    RESET_EXTRUDER
    G1 E-9.05 F1200
    G1 E0.68 F165
    G1 E0.70 F168
    G1 E0.73 F177
    G1 E0.78 F189
    G1 E0.82 F197
    G1 E0.84 F204
    G1 E0.90 F216
    G1 E0.97 F234
    G1 E1.02 F246
    G1 E1.04 F250
    G1 E-15.00 F6000.0
    G1 E-24.50 F5400.0
    G1 E-7.00 F2700.0
    G1 E-3.50 F1620.0
    G1 E20.00 F900.0
    G1 E-13 F500.0
    G1 E13 F400.0
    G1 E-11 F500.0
    G1 E11 F400.0
    G1 E-2.00 F50.0
    G1 E-4.00 F1200.0
    G1 E-4.00 F2000
    RESET_EXTRUDER

####################################################################################################################
#             NOZZLE BRUSH
####################################################################################################################

[gcode_macro CLEANNOZZLE]
gcode:
	# Parameters
	# Iterations
	{% set i = params.I|default(5)|int %}
	# Speed
	{% set s = params.S|default(100)|int %}
	
	CG28
	SAVE_GCODE_STATE NAME=CLEANNOZZLE
	ABSOLUTE_COORDINATES																
    G0 Z10 F900
	G0 X260 Y312 F18000			                                    ; move to right of nozzle brush
	G0 Z0 F900													    ; move down to nozzle brush
	{% for iteration in range(i|int) %}
		G0 X210 F{s*60}												; wipe back
		G0 X260	F{s*60}												; wipe forth
	{% endfor %}
	G0 X210	F{s*60}													; wipe back
	G0 Z10 F900												    ; raise


[gcode_macro SWIPENOZZLE]
gcode:
	CG28
	SAVE_GCODE_STATE NAME=SWIPENOZZLE
	ABSOLUTE_COORDINATES																
    G0 Z10 F900
	G0 X260 Y312 F18000 			                                ; move to rear of nozzle brush
	G0 Z2	F900													; lower
	G0 X210 F18000													; wipe forward
	G0 Z10	F900												    ; raise
	RESTORE_GCODE_STATE NAME=SWIPENOZZLE


####################################################################################################################
#                  FAN CONTROL
####################################################################################################################


[delayed_gcode NEVERMORE_OFF]
gcode:
  SET_FAN_SPEED FAN=nevermore SPEED=0


[gcode_macro NEVERMORE_ADJUST]
gcode:
	# ABS
	{% if printer.heater_bed.target >= 100 %}
		SET_FAN_SPEED FAN=nevermore SPEED=1
	## PETG
	{% elif printer.heater_bed.target > 65 and printer.heater_bed.target < 100 %}
		SET_FAN_SPEED FAN=nevermore SPEED=0
	# PLA
	{% elif printer.heater_bed.target <= 65 %}
		SET_FAN_SPEED FAN=nevermore SPEED=0
	# Catch-all
	{% else %}
		SET_FAN_SPEED FAN=nevermore SPEED=1
  {% endif %}

  


