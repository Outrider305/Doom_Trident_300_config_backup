
############################################################################################################################################################################################################################
############################################################################################################################################################################################################################
#                Base Macros 
############################################################################################################################################################################################################################
############################################################################################################################################################################################################################


##############################################################################################################
#                CONDITIONAL HOMING
##############################################################################################################

# Conditional G28 (home if not already homed)
[gcode_macro CG28]
gcode:
	{% if "xyz" not in printer.toolhead.homed_axes %}
		G28
	{% endif %}


# Conditional G28 (home if not already homed)
[gcode_macro XYCG28]
gcode:
	{% if "xy" not in printer.toolhead.homed_axes %}
		G28 X Y
	{% endif %}


[gcode_macro ZCG28]
gcode:
	{% if "z" not in printer.toolhead.homed_axes %}
		G28 Z
	{% endif %}



##############################################################################################################
#                  PARKING 
##############################################################################################################


# Park front center
[gcode_macro PARKFRONT]
gcode:
	CG28                                  											
	SAVE_GCODE_STATE NAME=PARKFRONT
	ABSOLUTE_COORDINATES                                   					
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+10} F18000	
    G0 Z{printer.toolhead.axis_maximum.z/2} F900
	RESTORE_GCODE_STATE NAME=PARKFRONT


# Park front center, but low down
[gcode_macro PARKFRONTLOW]
gcode:
	CG28          
	SAVE_GCODE_STATE NAME=PARKFRONT
	ABSOLUTE_COORDINATES                                   									
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+25} F18000		
    G0 Z20 F900							
	RESTORE_GCODE_STATE NAME=PARKFRONT


# Park top rear left
[gcode_macro PARKREAR]
gcode:
	CG28                                  		
	SAVE_GCODE_STATE NAME=PARKREAR
	ABSOLUTE_COORDINATES                                   		
	G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_maximum.y-10} F18000
  G0 Z{printer.toolhead.axis_maximum.z-50} F900		
	RESTORE_GCODE_STATE NAME=PARKREAR


# Park center of build volume
[gcode_macro PARKCENTER]
gcode:
	CG28                                  					
	SAVE_GCODE_STATE NAME=PARKCENTER
	ABSOLUTE_COORDINATES                                   				
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} F18000	
  G0 Z{printer.toolhead.axis_maximum.z/2} F900
	RESTORE_GCODE_STATE NAME=PARKCENTER


# Park 20mm above center of bed
[gcode_macro PARKBED]
gcode:
	CG28                                  						
	SAVE_GCODE_STATE NAME=PARKBED
	ABSOLUTE_COORDINATES                                   				
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} F18000
  G0 Z20 F900										
	RESTORE_GCODE_STATE NAME=PARKBED


  # Park at purge bucket
[gcode_macro PARKPURGE]
gcode:
	CG28                                  										
	SAVE_GCODE_STATE NAME=PARKPURGE
	ABSOLUTE_COORDINATES                              								
    G0 Z15 F900
	G0 X275 Y312 F18000								
	RESTORE_GCODE_STATE NAME=PARKPURGE



##############################################################################################################
#                              G Code Overrides
##############################################################################################################


[gcode_macro HOME]
gcode:
   DISPLAYTEXT TEXT="Homing"
   G28
   DISPLAYTEXT TEXT="Honey, Im Home!"


# Convert Marlin linear advance (M900) commands to Klipper (SET_PRESSURE_ADVANCE) commands.
# Used in conjunction with Marlin's linear advance calibration tool: 
# https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
	# Parameters
	{% set pa = params.K|float %}
	
	SET_PRESSURE_ADVANCE ADVANCE={pa}


# Replace M109 (Wait for Hotend Temperature) with TEMPERATURE_WAIT so we don't have to wait for PID to level off.
[gcode_macro M109]
rename_existing: M99109
gcode:
	#Parameters
	{% set s = params.S|float %}
	
	M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+5}


[gcode_macro CLEAR_BUFFER]
gcode:
    M400

[gcode_macro ABSOLUTE_COORDINATES]
gcode:
    G90

[gcode_macro RELATIVE_COORDINATES]
gcode:
    G91

[gcode_macro ABSOLUTE_EXTRUSION]
gcode:
    M82

[gcode_macro RELATIVE_EXTRUSION]
gcode:
    M83

[gcode_macro DISABLE_MOTORS]
gcode:
   M84

[gcode_macro RESET_EXTRUDER]
gcode:
    DISPLAYTEXT TEXT="Resetting Extruder"
    G92 E0 ; reset extruder
    DISPLAYTEXT TEXT="Extruder Reset"

[gcode_macro WAIT]
gcode:
    {% set TIME = params.TIME|default(0)|int %}
    G4 P{TIME*1000}

# Override, set fan speeds to low and start monitoring loop.
[gcode_macro SET_HEATER_TEMPERATURE]
rename_existing: _SET_HEATER_TEMPERATURE
gcode:
	# Parameters
	{% set HEATER = params.HEATER|default("None") %}
	{% set TARGET = params.TARGET|default(0)|int %}
	# Vars
	{% set THRESHOLD = printer["gcode_macro bedfanvars"].threshold|int %}
	
	{% if HEATER|lower == "extruder" %}
		M104 S{TARGET}
	{% elif HEATER|lower == "heater_bed" %}
		M99140 S{TARGET}
	{% else %}
		{action_respond_info("Heater %s not supported" % HEATER)}
	{% endif %}

	# Set fans to low if heater_bed temp is requested above threshold temp, and kick off monitoring loop.
	{% if HEATER|lower == "heater_bed" %}
		{% if TARGET >= THRESHOLD %}
			BedFansSlow
			UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=1
		{% else %}
			BedFansOff
			UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=0 #	Cancel bed fan loop if it's running
		{% endif %}
	{% endif %}


# Override M190 (Wait for Bed Temperature)
# As a bonus, use TEMPERATURE_WAIT so we don't have to wait for PID to level off.
[gcode_macro M190]
rename_existing: M99190
gcode:
	# Parameters
	{% set S = params.S|int %}
	# Vars
	{% set THRESHOLD = printer["gcode_macro bedfanvars"].threshold|int %}
	
	{% if S >= THRESHOLD %}
		BedFansSlow																# >= Threshold temp: Low speed fans while heating 
	{% else %}
		BedFansOff																# < Threshold temp: Turn bed fans off
	{% endif %}                                        

	M140 {% for p in params
	  %}{'%s%s' % (p, params[p])}{%
	  endfor %}																	# Set bed temp
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={S|int} MAXIMUM={S|int + 5}		# Wait for bed temp

	# Post-heating fan speeds
	{% if S >= THRESHOLD %}								    
		BedFansFast																# >= Threshold temp: Higher speed fans after heating finished
	{% endif %}


# Replace M140 (Set Bed Temperature) to just be an alias of SET_HEATER_TEMPERATURE (which has associated bed fan logic if enabled)
[gcode_macro M140]
rename_existing: M99140
gcode:
	# Parameters
	{% set S = params.S|float %}
	
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}


# Replace TURN_OFF_HEATERS
[gcode_macro TURN_OFF_HEATERS]
rename_existing: _TURN_OFF_HEATERS
gcode:
	BedFansOff
	_TURN_OFF_HEATERS


##############################################################################################################
#                        FLUIDD / MAINSAIL SHORTCUTS 
##############################################################################################################


[gcode_macro SETPA]
gcode:
	# Parameters
	{% set pa = params.PA|default(0)|float %}

	SET_PRESSURE_ADVANCE ADVANCE={pa}

[gcode_macro SETPASMOOTH]
gcode:
	# Parameters
	{% set smooth = params.SMOOTH|default(0)|float %}
	
	SET_PRESSURE_ADVANCE SMOOTH_TIME={smooth}



##############################################################################################################
#                           SAFETY
##############################################################################################################


# Lower z stepper current (in case of crash). Referenced in my klicky homing overrides and in calibrate_z.
[gcode_macro LOWERCURRENT]
gcode:
	SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.45 #HOLDCURRENT=0.35 
	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT=0.45 #HOLDCURRENT=0.35
	SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT=0.45 #HOLDCURRENT=0.35
	#SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT=0.35 #HOLDCURRENT=0.35


# Returns z steppers back to their currents specified in the config.
[gcode_macro RESETCURRENT]
gcode:
	SET_TMC_CURRENT STEPPER=stepper_z CURRENT={printer.configfile.settings["tmc2209 stepper_z"].run_current} #HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={printer.configfile.settings["tmc2209 stepper_z1"].run_current} #HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z1"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={printer.configfile.settings["tmc2209 stepper_z2"].run_current} #HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z2"].hold_current}
	#SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={printer.configfile.settings["tmc2209 stepper_z3"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z3"].hold_current}	


[gcode_macro RESETSPEEDS]
gcode:
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} 
    SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}  
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity}


[gcode_macro OFF]
gcode:
	DISABLE_MOTORS									; turn steppers off
    TURN_OFF_HEATERS								; turn bed / hotend off
    M107                         	   			 	; turn print cooling fan off
#	SET_FAN_SPEED FAN=Exhaust SPEED=0  				; turn exhaust fan off
	SET_FAN_SPEED FAN=BedFans SPEED=0				; bed fan off
    SET_FAN_SPEED FAN=nevermore SPEED=0				; Nevermore off
	SET_PIN PIN=caselight VALUE=0					; turn light off
    LCDRGB R=0 G=0 B=0	                            ; Turn LCD off
    STATUS_OFF                                      ; Turn Stealthburner LED off

[delayed_gcode DELAYED_OFF]
gcode:
	OFF  															; call "OFF" macro, to turn off everything (heaters, motors, lights, fans)
